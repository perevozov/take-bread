swagger: "2.0"
info:
    title: TakeBread API
    version: "1.0"

host: takebread.hopto.org

basePath: /api

schemes:
    - https

produces:
    - application/json

consumes:
    - application/json

securityDefinitions:
    Bearer:
        type: apiKey
        in: header
        name: Authorization

definitions:
    NewUser:
        type: object
        properties:
            email:
                type: string
            password:
                type: string

    LoginResult:
        type: object
        properties:
            sessionId:
                type: string
            expires:
                type: string
                description: Expiration date in the RFC3339 format

    Item:
        type: object
        required:
            - title
        properties:
            id:
                type: string
            title:
                type: string

    ItemWithPosition:
        allOf:
            - $ref: "#/definitions/Item"
              type: object
            - properties:
                  position:
                      type: integer

    List:
        type: object
        required:
            - title
        properties:
            id:
                type: string
            title:
                type: string

    ListWithItems:
        type: object
        required:
            - title
        properties:
            id:
                type: string
            title:
                type: string
            items:
                type: array
                items:
                    $ref: "#/definitions/ItemWithPosition"

    ListArray:
        type: array
        items:
            $ref: "#/definitions/List"

paths:
    /register:
        post:
            operationId: register
            description: Registers new user
            consumes:
                - application/json
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                      $ref: "#/definitions/NewUser"
            responses:
                "200":
                    description: success

    /login:
        post:
            operationId: login
            description: Authenticate user, creates session and sets session cookie
            consumes:
                - application/json
            parameters:
                - name: body
                  in: body
                  schema:
                      type: object
                      properties:
                          email:
                              type: string
                          password:
                              type: string
            responses:
                "200":
                    description: success
                    schema:
                        $ref: "#/definitions/LoginResult"

    /item:
        post:
            operationId: createItem
            description: creates a new item
            security:
                - Bearer: []
            consumes:
                - application/json
            parameters:
                - name: body
                  in: body
                  required: true
                  schema:
                      $ref: "#/definitions/Item"
            responses:
                "200":
                    description: success
                    schema:
                        $ref: "#/definitions/Item"
        put:
            operationId: updateItem
            description: updates an existing item
            security:
                - Bearer: []
            consumes:
                - application/json
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                      $ref: "#/definitions/Item"
            responses:
                "200":
                    description: success
                    schema:
                        $ref: "#/definitions/Item"
    /item/{itemID}:
        get:
            operationId: getItem
            description: returns single item by its ID
            security:
                - Bearer: []
            parameters:
                - in: path
                  name: itemID
                  required: true
                  type: string
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: "#/definitions/Item"

    /list:
        post:
            operationId: createLst
            description: creates a new shopping list
            security:
                - Bearer: []
            consumes:
                - application/json
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                      $ref: "#/definitions/List"
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: "#/definitions/List"
        put:
            operationId: updateList
            description: updates a shopping list
            security:
                - Bearer: []
            consumes:
                - application/json
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                      $ref: "#/definitions/List"
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: "#/definitions/List"

    /list/{listID}:
        get:
            operationId: getList
            description: return items list
            security:
                - Bearer: []
            parameters:
                - in: path
                  name: listID
                  required: true
                  type: string
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: "#/definitions/ListWithItems"

    /list/{listID}/item:
        put:
            operationId: addItem
            description: adds new item to the list
            security:
                - Bearer: []
            consumes:
                - application/json
            parameters:
                - in: path
                  name: listID
                  required: true
                  type: string
                - in: body
                  name: body
                  required: true
                  schema:
                      $ref: "#/definitions/Item"
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: "#/definitions/ItemWithPosition"

    /lists:
        get:
            operationId: listLists
            description: returns lists of all items lists for the user
            security:
                - Bearer: []
            responses:
                "200":
                    description: OK
                    schema:
                        $ref: "#/definitions/ListArray"
